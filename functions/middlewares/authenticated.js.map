{"version":3,"sources":["../../backend/middlewares/authenticated.js"],"names":["jwt","require","CustomError","functions","userTypes","superadmin","validate","user","is_superadmin","admin","is_admin","authenticate","type","req","res","next","token","headers","split","verify","config","secret","err","decoded","message","authenticated","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,WAAD,CAA3B;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAzB;;AAEA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACV;AACAC,IAAAA,QAAQ,EAAE,kBAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,aAAL,KAAuB,CAA3B;AAAA;AAFJ,GADI;AAKhBC,EAAAA,KAAK,EAAE;AACL;AACAH,IAAAA,QAAQ,EAAE,kBAAAC,IAAI;AAAA,aAAIA,IAAI,CAACG,QAAL,KAAkB,CAAtB;AAAA;AAFT,GALS;AAShBH,EAAAA,IAAI,EAAE;AACJ;AACAD,IAAAA,QAAQ,EAAE;AAAA,aAAM,IAAN;AAAA;AAFN;AATU,CAAlB;;AAeA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA;AAAA,uFAAI,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBC,cAAAA,KAFmB,GAEXH,GAAG,CAACI,OAAJ,CAAY,eAAZ,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAFW;;AAAA,mBAIrBF,KAJqB;AAAA;AAAA;AAAA;;AAKvBhB,cAAAA,GAAG,CAACmB,MAAJ,CAAWH,KAAX,EAAkBb,SAAS,CAACiB,MAAV,GAAmBpB,GAAnB,CAAuBqB,MAAzC,EAAiD,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACjE,oBAAID,GAAJ,EAAS;AACP,wBAAM,IAAIpB,WAAJ,CAAgB,GAAhB,EAAqB,eAArB,CAAN;AACD,iBAFD,MAEO;AACL,sBAAI,CAACE,SAAS,CAACQ,IAAD,CAAT,CAAgBN,QAAhB,CAAyBiB,OAAzB,CAAL,EAAwC;AACtC,0BAAM,IAAIrB,WAAJ,CAAgB,GAAhB,EAAqB,eAArB,CAAN;AACD;;AACDW,kBAAAA,GAAG,CAACN,IAAJ,GAAWgB,OAAX;AACAR,kBAAAA,IAAI;AACL;AACF,eAVD;AALuB;AAAA;;AAAA;AAAA,oBAiBjB,IAAIb,WAAJ,CAAgB,GAAhB,EAAqB,eAArB,CAjBiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAoBrB,uBAAeA,WApBM;AAAA;AAAA;AAAA;;AAAA,+CAoBca,IAAI,aApBlB;;AAAA;AAqBzBA,cAAAA,IAAI,CAAC,IAAIb,WAAJ,CAAgB,GAAhB,EAAqB,YAAIsB,OAAzB,CAAD,CAAJ;;AArByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAyBA,IAAMC,aAAa,GAAG;AACpBpB,EAAAA,UAAU,EAAEM,YAAY,CAAC,YAAD,CADJ;AAEpBF,EAAAA,KAAK,EAAEE,YAAY,CAAC,OAAD,CAFC;AAGpBJ,EAAAA,IAAI,EAAEI,YAAY,CAAC,MAAD;AAHE,CAAtB;AAMAe,MAAM,CAACC,OAAP,GAAiBF,aAAjB","sourcesContent":["const jwt = require('jsonwebtoken')\nconst CustomError = require('../errors')\nconst functions = require('firebase-functions')\n\nconst userTypes = {\n  superadmin: {\n    // only superadmins can bypass this validation\n    validate: user => user.is_superadmin === 1,\n  },\n  admin: {\n    // admins and superadmins can bypass admin validation\n    validate: user => user.is_admin === 1,\n  },\n  user: {\n    // any valid token can bypass user validation\n    validate: () => true,\n  },\n}\n\nconst authenticate = type => async (req, res, next) => {\n  try {\n    const token = req.headers['authorization'].split(' ')[1]\n\n    if (token) {\n      jwt.verify(token, functions.config().jwt.secret, (err, decoded) => {\n        if (err) {\n          throw new CustomError(401, 'Invalid token')\n        } else {\n          if (!userTypes[type].validate(decoded)) {\n            throw new CustomError(401, 'Invalid token')\n          }\n          req.user = decoded\n          next()\n        }\n      })\n    } else {\n      throw new CustomError(401, 'Invalid token')\n    }\n  } catch (err) {\n    if (err instanceof CustomError) return next(err)\n    next(new CustomError(401, err.message))\n  }\n}\n\nconst authenticated = {\n  superadmin: authenticate('superadmin'),\n  admin: authenticate('admin'),\n  user: authenticate('user'),\n}\n\nmodule.exports = authenticated\n"],"file":"authenticated.js"}
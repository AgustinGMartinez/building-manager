{"version":3,"sources":["../backend/index.js"],"names":["admin","initializeApp","firebase","app","use","bodyParser","json","mainRouter","err","req","res","next","CustomError","message","isJoi","status","send","error","details","api","https","onRequest","proxy","client_req","client_res","console","log","url","slice","parsedUrl","parse","hostname","pathname","options","path","method","headers","http","request","writeHead","statusCode","pipe","end"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEAA,uBAAMC,aAAN,CAAoB,iCAASC,QAA7B;;AACA,IAAMC,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AAEAD,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AAEAH,GAAG,CAACC,GAAJ,CAAQG,YAAR;AAEAJ,GAAG,CAACC,GAAJ,CAAQ,UAACI,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B,MAAIH,GAAG,YAAYI,eAAnB,EAAgC;AAC9B,QAAI,CAACJ,GAAG,CAACK,OAAJ,CAAYC,KAAjB,EAAwB;AACtB,aAAOJ,GAAG,CAACK,MAAJ,CAAWP,GAAG,CAACO,MAAf,EAAuBC,IAAvB,CAA4B;AACjCC,QAAAA,KAAK,EAAET,GAAG,CAACK;AADsB,OAA5B,CAAP;AAGD;;AACD,WAAOH,GAAG,CAACK,MAAJ,CAAWP,GAAG,CAACO,MAAf,EAAuBC,IAAvB,CAA4B;AACjCC,MAAAA,KAAK,EAAET,GAAG,CAACK,OAAJ,CAAYK,OAAZ,CAAoB,CAApB,EAAuBL;AADG,KAA5B,CAAP;AAGD;;AACD,SAAOH,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,KAAK,EAAET,GAAG,CAACK;AADe,GAArB,CAAP;AAGD,CAdD;;AAgBA,IAAMM,GAAG,GAAGC,yBAAMC,SAAN,CAAgBlB,GAAhB,CAAZ,C,CAEA;;;;;AAEA,IAAMmB,KAAK,GAAGF,yBAAMC,SAAN,CAAgB,SAASA,SAAT,CAAmBE,UAAnB,EAA+BC,UAA/B,EAA2C;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,UAAU,CAACI,GAAX,CAAeC,KAAf,CAAqB,CAArB,CAA5B;;AAEA,MAAMC,SAAS,GAAGF,aAAIG,KAAJ,CAAU,YAAYP,UAAU,CAACI,GAAX,CAAeC,KAAf,CAAqB,CAArB,CAAtB,CAAlB;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,SAAS,CAACE,QAAnC;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,SAAS,CAACG,QAA/B;AAEA,MAAMC,OAAO,GAAG;AACdF,IAAAA,QAAQ,EAAEF,SAAS,CAACE,QADN;AAEdG,IAAAA,IAAI,EAAEL,SAAS,CAACG,QAFF;AAGdG,IAAAA,MAAM,EAAEZ,UAAU,CAACY,MAHL;AAIdC,IAAAA,OAAO,EAAEb,UAAU,CAACa;AAJN,GAAhB;;AAOA,MAAMd,KAAK,GAAGe,cAAKC,OAAL,CAAaL,OAAb,EAAsB,UAASvB,GAAT,EAAc;AAChDc,IAAAA,UAAU,CAACe,SAAX,CAAqB7B,GAAG,CAAC8B,UAAzB,EAAqC9B,GAAG,CAAC0B,OAAzC;AACA1B,IAAAA,GAAG,CAAC+B,IAAJ,CAASjB,UAAT,EAAqB;AACnBkB,MAAAA,GAAG,EAAE;AADc,KAArB;AAGD,GALa,CAAd;;AAOAnB,EAAAA,UAAU,CAACkB,IAAX,CAAgBnB,KAAhB,EAAuB;AACrBoB,IAAAA,GAAG,EAAE;AADgB,GAAvB;AAGD,CAxBa,CAAd","sourcesContent":["import { config, https } from 'firebase-functions'\nimport admin from 'firebase-admin'\nimport http from 'http'\nimport url from 'url'\nimport express from 'express'\nimport cors from 'cors'\n\nimport mainRouter from './api'\nimport bodyParser from 'body-parser'\nimport CustomError from './errors'\nimport graphqlHTTP from 'express-graphql'\n\nadmin.initializeApp(config().firebase)\nconst app = express()\n\napp.use(cors())\n\napp.use(bodyParser.json())\n\napp.use(mainRouter)\n\napp.use((err, req, res, next) => {\n  if (err instanceof CustomError) {\n    if (!err.message.isJoi) {\n      return res.status(err.status).send({\n        error: err.message,\n      })\n    }\n    return res.status(err.status).send({\n      error: err.message.details[0].message,\n    })\n  }\n  return res.status(500).send({\n    error: err.message,\n  })\n})\n\nconst api = https.onRequest(app)\n\n// proxy implementation\n\nconst proxy = https.onRequest(function onRequest(client_req, client_res) {\n  console.log('gonna fetch:', client_req.url.slice(1))\n\n  const parsedUrl = url.parse('http://' + client_req.url.slice(1))\n  console.log('hostname:', parsedUrl.hostname)\n  console.log('path:', parsedUrl.pathname)\n\n  const options = {\n    hostname: parsedUrl.hostname,\n    path: parsedUrl.pathname,\n    method: client_req.method,\n    headers: client_req.headers,\n  }\n\n  const proxy = http.request(options, function(res) {\n    client_res.writeHead(res.statusCode, res.headers)\n    res.pipe(client_res, {\n      end: true,\n    })\n  })\n\n  client_req.pipe(proxy, {\n    end: true,\n  })\n})\n\nexport { proxy, api }\n"],"file":"index.js"}